
#Display all columns for all transactions
SELECT*
    FROM RETAIL;

#Display only the Transaction ID, Date, and Customer ID for all records.
SELECT Transaction_ID,
Date,
CUSTOMER_ID
FROM RETAIL;

#Display all the distinct product categories in the dataset.
SELECT DISTINCT PRODUCT_CATEGORY
FROM RETAIL;

# Display all the distinct gender values in the dataset.
SELECT DISTINCT
GENDER
FROM RETAIL;

#Display all transactions where the Age is greater than 40.
SELECT * 
FROM RETAIL
WHERE AGE > 40;

#Display all transactions where the Price per Unit is between 100 and 500.
SELECT *
FROM RETAIL
WHERE PRICE_PER_UNIT BETWEEN 100AND 500;

#Display all transactions where the Product Category is either 'Beauty' or 'Electronics'.
SELECT * 
FROM RETAIL
WHERE PRODUCT_CATEGORY IN ('Beauty', 'Electronics');

#Display all transactions where the Product Category is not 'Clothing'.
SELECT *
FROM RETAIL
WHERE PRODUCT_CATEGORY!='Clothing';

#. Display all transactions where the Quantity is greater than or equal to 3.
SELECT * 
FROM RETAIL
WHERE PRODUCT_CATEGORY >=3;


#Count the total number of transactions.
SELECT COUNT(*) AS TOTAL_TRANSACTIONS 
FROM RETAIL;

#Find the average Age of customers.
SELECT * 
FROM RETAIL
WHERE QUANTITY >= 3;

#Find the total quantity of products sold.
SELECT AVG(Age) AS Average_Age
FROM RETAIL;

#
SELECT SUM(quantity) AS Total_Quantity
FROM RETAIL;

#Find the maximum Total Amount spent in a single transaction.
SELECT MAX(TOTAL_AMOUNT) AS Max_TOTAL_AMOUNT
FROM RETAIL;


#Find the minimum Price per Unit in the dataset.
SELECT MIN(PRICE_PER_UNIT) AS MIN_PRICE_PER_UNIT 
FROM RETAIL;

#. Find the number of transactions per Product Category.
SELECT PRODUCT_CATEGORY, 
COUNT(*) AS TRANSACTIO_COUNT
FROM RETAIL
GROUP BY PRODUCT_CATEGORY;

#Find the total revenue (Total Amount) per gender.
SELECT GENDER,
SUM(TOTAL_AMOUNT) AS TOTAL_REVENUE
FROM RETAIL
GROUP BY GENDER;

#Find the average Price per Unit per product category.
SELECT PRODUCT_CATEGORY, 
AVG(PRICE_PER_UNIT) AS AVERAGE_PRICE
FROM RETAIL
GROUP BY PRODUCT_CATEGORY;

#. Find the total revenue per product category where total revenue is greater than 10,000.
SELECT PRODUCT_CATEGORY, 
SUM(TOTAL_AMOUNT) AS TOTAL_REVENUE
FROM RETAIL
GROUP BY PRODUCT_CATEGORY
HAVING SUM(TOTAL_AMOUNT) > 10000;

#Find the average quantity per product category where the average is more than 2.
SELECT PRODUCT_CATEGORY, AVG(QUANTITY) AS AVERAGE_QUANTITY
FROM RETAIL
GROUP BY PRODUCT_CATEGORY
HAVING AVG(QUANTITY) > 2;

#Display a column called Spending_Level that shows 'High' if Total Amount > 1000, otherwise 'Low'.
SELECT 
   TRANSACTION_ID, 
    TOTAL_AMOUNT,
    CASE 
        WHEN TOTAL_AMOUNT > 1000 THEN 'High'
        ELSE 'Low'
    END AS SPENDING_LEVEL
FROM RETAIL;

#Display a new column called Age_Group that labels customers as:
•	'Youth' if Age < 30
•	'Adult' if Age is between 30 and 59
•	'Senior' if Age >= 60

SELECT 
   CUSTOMER_ID, 
   AGE,
    CASE 
        WHEN AGE < 30 THEN 'Youth'
        WHEN AGE BETWEEN 30 AND 59 THEN 'Adult'
        WHEN AGE >= 60 THEN 'Senior'
    END AS AGE_GROUP
FROM RETAIL;


