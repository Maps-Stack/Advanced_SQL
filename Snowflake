Practical using Snowflake

#
SELECT*
    FROM RETAIL;

#
SELECT Transaction_ID,
Date,
CUSTOMER_ID
FROM RETAIL;

#SELECT DISTINCT PRODUCT_CATEGORY
FROM RETAIL;

#
SELECT DISTINCT
GENDER
FROM RETAIL;

#SELECT * 
FROM RETAIL
WHERE AGE > 40;

#
SELECT *
FROM RETAIL
WHERE PRICE_PER_UNIT BETWEEN 100AND 500;

#
SELECT * 
FROM RETAIL
WHERE PRODUCT_CATEGORY IN ('Beauty', 'Electronics');

#
SELECT *
FROM RETAIL
WHERE PRODUCT_CATEGORY!='Clothing';

#
SELECT * 
FROM RETAIL
WHERE PRODUCT_CATEGORY >=3;


#
SELECT COUNT(*) AS TOTAL_TRANSACTIONS 
FROM RETAIL;

#
SELECT * 
FROM RETAIL
WHERE QUANTITY >= 3;

#
SELECT AVG(Age) AS Average_Age
FROM RETAIL;

#
SELECT SUM(quantity) AS Total_Quantity
FROM RETAIL;
#
SELECT MAX(TOTAL_AMOUNT) AS Max_TOTAL_AMOUNT
FROM RETAIL;
#
SELECT MAX(TOTAL_AMOUNT) AS MAX_TOTAL_AMOUNT 
FROM RETAIL;
#
SELECT MIN(PRICE_PER_UNIT) AS MIN_PRICE_PER_UNIT 
FROM RETAIL;
#
SELECT PRODUCT_CATEGORY, 
COUNT(*) AS TRANSACTIO_COUNT
FROM RETAIL
GROUP BY PRODUCT_CATEGORY;
#
SELECT GENDER,
SUM(TOTAL_AMOUNT) AS TOTAL_REVENUE
FROM RETAIL
GROUP BY GENDER;
#
SELECT PRODUCT_CATEGORY, 
AVG(PRICE_PER_UNIT) AS AVERAGE_PRICE
FROM RETAIL
GROUP BY PRODUCT_CATEGORY;
#
SELECT PRODUCT_CATEGORY, 
SUM(TOTAL_AMOUNT) AS TOTAL_REVENUE
FROM RETAIL
GROUP BY PRODUCT_CATEGORY
HAVING SUM(TOTAL_AMOUNT) > 10000;
#
SELECT PRODUCT_CATEGORY, AVG(QUANTITY) AS AVERAGE_QUANTITY
FROM RETAIL
GROUP BY PRODUCT_CATEGORY
HAVING AVG(QUANTITY) > 2;
#
SELECT 
   TRANSACTION_ID, 
    TOTAL_AMOUNT,
    CASE 
        WHEN TOTAL_AMOUNT > 1000 THEN 'High'
        ELSE 'Low'
    END AS SPENDING_LEVEL
FROM RETAIL;
#
SELECT 
   CUSTOMER_ID, 
   AGE,
    CASE 
        WHEN AGE < 30 THEN 'Youth'
        WHEN AGE BETWEEN 30 AND 59 THEN 'Adult'
        WHEN AGE >= 60 THEN 'Senior'
    END AS AGE_GROUP
FROM RETAIL;


